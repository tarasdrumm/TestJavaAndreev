import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class TarasTask {

    /*
    Задача: реализовать метод textModifier, который считывает из консоли текст, введённый пользователем и меняет его согласно описанному алгоритму.

    public static String textModifier() // этот метод надо реализовать

    Результатом работы метода является возврат строки (текста) с учётом всех изменений.
    Результатом работы программы является вывод в консоль изменённого текста согласно всем условиям:

    1. Пользователь вводит текст одной строкой и нажимает “enter”.
    2. В тексте могут присутствовать различные специальные символы, которые надо обрабатывать согласно условиям ниже:
    a. Если в тексте между словами присутствует несколько пробелов подряд, надо оставить только один из них. Для реализации этого подпункта нельзя пользоваться методами replace() и replaceAll().
    b. Если в тексте присутствует знак минус (-), это значит, что символ слева от этого знака надо поменять местами с символом, который стоит справа от этого знака. Обратите внимание, что символом может быть не только буква, но и цифра или любой другой знак/символ, в том числе символ пробела. После смены символов местами, знак минус (-) надо удалить из строки результата.
    c. Если в тексте присутствует знак плюс (+), вам необходимо заменить его на восклицательный знак (!).
    d. В тексте могут присутствовать цифры (от 0 до 9). Вам необходимо посчитать их сумму и удалить из текста. Сумму цифр вам нужно добавить в конец результирующей строки через пробел (пробел должен стоять перед суммой цифр). Если цифр в тексте не было - "0" (ноль) в конце строки выводить не нужно.

    Все манипуляции с текстом должны выполняться ровно в той последовательности, которая описана в пункте 2. То есть, сначала выполняется пункт A, затем пункт B, затем C и D. Это важно для получения корректного итогового результата.

    Пример ввода №1: генрих1  играет+2   л-июбит0школу
    Пример вывода №1: генрих играет! илюбитшколу 3

    Пример ввода №2: Я ю-лбю-л джаву   всем сердцем+
    Пример вывода №2: Я люблю джаву всем сердцем!

    Пример ввода №3: Я e-на-нвиу-ж джаву          всем сердцем+
    Пример вывода №3: Я люблю джаву всем сердцем!

    */

    public static void main(String[] args) throws IOException {
        System.out.println();
        System.out.println();
        System.out.print(textModifier());
        System.out.println();
        System.out.println();
    }

    private static String textModifier() throws IOException {
        // Создаём буферезированный поток чтения c консоли
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        System.out.print("Введите текст: ");
        String inputText = reader.readLine(); // текст, который был введен в консоли

        String[] splitInputText = inputText.split(""); // разбиваем введённый текст на массив для удобной работы со строками
        StringBuilder resultText = new StringBuilder(); // создаём билдер строки для оптимальной работы со строкой

        int sumDigits = 0; // Итоговая сумма всех цифр, встречающихся в тексте

        // Открываем цикл для итерации по всем символам текста
        for (int i = 0; i < splitInputText.length; i++) {
            String str = splitInputText[i]; // обращаемся к строке по её индексу в массиве splitInputText

            // Пункт a: если в тексте между словами присутствует несколько пробелов подряд, оставляем только один
            if (str.equals(" ")) {
                String spaceStreakSymbolOfSpace = ""; // символ, прервавщий стрик подряд идущих пробелов (Например: "   Привет" - здесь идут подряд три пробела. 'П' - символ, который прерывает стрик из трёх пробелов и заверщает цикл по их считыванию)

                // Открываем цикл считывания подряд идущих пробелов
                for (int j = i; j < splitInputText.length; j++) {
                    boolean isSpace = splitInputText[j].equals(" "); // Является ли взятый символ по индексу j пробелом

                    // Если isSpace не пробел, завершаем цикл и задаём spaceStreakSymbolOfSpace символ, который прервал стрик
                    if (!isSpace) {
                        spaceStreakSymbolOfSpace = splitInputText[j];
                        break;
                    }

                    // Увеличиваем индекс i каждый раз, когда последующий символ не является пробелом
                    i++;
                }

                // Добавляем один пробел в результирующую строку и символ, который прервал стрик из пробелов
                resultText.append(" ");
                resultText.append(spaceStreakSymbolOfSpace);
            }
            else if (str.equals("-")) {
                // Пункт b: Меняем местами символы, которые находятся слева и справа от знака '-'

                String leftSymbol = splitInputText[i - 1]; // Вычисляем левый символ по индексу
                String rightSymbol = splitInputText[i + 1]; // Вычисляем правый символ по индексу

                resultText.setLength(resultText.length() - 1); // Уменьшаем размер результирующей строки на 1, чтобы удалить предыдущий добавленный символ. Нужно, чтобы символ, который идёт до символа '-', не дублировался в результирующейся строке
                resultText.append(rightSymbol).append(leftSymbol); // Добавляем сначала правый символ от '-', а потом левый

                i++;
            }
            else if (str.equals("+")) {
                resultText.append("!"); // Пункт c: Меняем знак '+' на знак '!'
            }
            else if (Character.isDigit(str.charAt(0))) {
                sumDigits = sumDigits + Integer.parseInt(str); // Пункт d: Если символ является цифрой, прибавляем к общей сумме
            }
            else {
                resultText.append(str); // Добавляем символ к результирующей строке
            }
        }

        // Пункт d: Добавляем пробел и вычисленную сумму в конец результирующей строки
        if ((sumDigits == 0 && inputText.contains("0")) || sumDigits > 0) {
            resultText.append(" ").append(sumDigits);
        }

        return "Результат: " + resultText;
    }
}